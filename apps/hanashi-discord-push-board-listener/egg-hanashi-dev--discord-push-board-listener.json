{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-10-26T17:26:37+02:00",
    "name": "Hanashi.dev - discord-push-board-listener",
    "author": "eggs@goover.dev",
    "description": "https:\/\/github.com\/HanashiDev\/discord-push-board-listener",
    "features": null,
    "docker_images": {
        "ghcr.io\/goover\/custom:discordpush": "ghcr.io\/goover\/custom:discordpush"
    },
    "file_denylist": [],
    "startup": "ts-node .\/app.ts",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Logged in as \"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "## clone git repos\r\n## supports both github and gitlab\r\n## supports using a personal access token to run git pull\r\n\r\napt update\r\napt install -y git curl jq file unzip python3 build-essential\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\nexport HOME=\/mnt\/server\r\n\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\r\n    echo -e \"assuming user knows what they are doing have a good day.\"\r\n    exit 0\r\nfi\r\n\r\n## add git ending if it's not on the address\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\nif [ -z \"${USERNAME}\" ] && [ -z \"${ACCESS_TOKEN}\" ]; then\r\n    echo -e \"using anon api call\"\r\nelse\r\n    GIT_ADDRESS=\"https:\/\/${USERNAME}:${ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d\/ -f3-)\"\r\nfi\r\n\r\n## pull git js bot repo\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"\/mnt\/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \".git directory exists\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"loading info from git config\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"files found with no git config\"\r\n            echo -e \"closing out without touching things to not break anything\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo \"pulling latest from github\"\r\n        git pull\r\n    fi\r\nelse\r\n    echo -e \"\/mnt\/server is empty.\\ncloning files into repo\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"cloning default branch\"\r\n        git clone ${GIT_ADDRESS} .\r\n    else\r\n        echo -e \"cloning ${BRANCH}'\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\r\n    fi\r\nfi\r\n\r\nif [ -f \"$HOME\/config\/config.json\" ]; then\r\n  echo \"-----------------------------------------\"\r\n  echo \"config.json found.\"\r\n  echo \"-----------------------------------------\"\r\nelse\r\n  echo \"-----------------------------------------\"\r\n  echo \"renaming config.json.dist\"\r\n  echo \"-----------------------------------------\"\r\n  mv $HOME\/config\/config.json.dist $HOME\/config\/config.json\r\nfi\r\n\r\nnpm install",
            "container": "node:18-bullseye-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "GIT_ADDRESS",
            "description": "",
            "env_variable": "GIT_ADDRESS",
            "default_value": "https:\/\/github.com\/HanashiDev\/discord-push-board-listener.git",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}