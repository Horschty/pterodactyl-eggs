{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-04-28T08:50:51+02:00",
    "name": "Night of the Dead",
    "author": "eggs@goover.dev",
    "description": null,
    "features": null,
    "docker_images": {
        "ghcr.io\/goover\/wine:staging": "ghcr.io\/goover\/wine:staging"
    },
    "file_denylist": [],
    "startup": "wine .\/LF\/Binaries\/Win64\/LFServer-Win64-Shipping.exe ?listen -log -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} & NOD_PID=$! ; tail -c0 -F .\/LF\/Saved\/Logs\/LF.log --pid=$NOD_PID",
    "config": {
        "files": "{\r\n    \".\/LF\/Saved\/Config\/ServerSettings.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"ServerName=\": \"ServerName={{server.build.env.SRV_NAME}}\",\r\n            \"Password=\": \"Password={{server.build.env.SRV_PW}}\",\r\n            \"MaxPlayers=\": \"MaxPlayers={{server.build.env.MAX_PLAYERS}}\",\r\n            \"IngameAdminPassword=\": \"IngameAdminPassword={{server.build.env.ADMIN_PW}}\",\r\n            \"DefaultMessageOfTheDay=\": \"DefaultMessageOfTheDay={{server.build.env.MOTD}}\",\r\n            \"SaveName=\": \"SaveName={{server.build.env.SAVE_NAME}}\",\r\n            \"Difficulty=\": \"Difficulty={{server.build.env.DIFFICULTY}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Start Session Complete\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n#\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Satisfactory Installscript${NC}\"\r\necho -e \"${YELLOW}Template by gOOvER | https:\/\/discord.goover.dev${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates jq dos2unix\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}download and install steamcmd. please wait...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## install game using steamcmd\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}install game using steamcmd. please wait...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) $( [[ \"${STEAM_SDK}\" == \"1\" ]] && printf %s '+app_update 1007' ) +app_update ${STEAM_APPID} $( [[ -z ${STEAM_BETAID} ]] || printf %s \"-beta ${STEAM_BETAID}\" ) $( [[ -z ${STEAM_BETAPASS} ]] || printf %s \"-betapassword ${STEAM_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n# add below your custom commands if needed\r\n\r\nFILE=$HOME\/LF\/Saved\/Config\/ServerSettings.ini\r\n\r\nif [ -f \"$FILE\" ]; then\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${GREEN}ServerSettings.ini found.${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nelse  \r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  echo -e \"${RED}No Serversettings.ini found. Downloading default...${NC}\"\r\n  echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n  yes | cp -rf $HOME\/ServerSettings.ini $HOME\/LF\/Saved\/Config\/ServerSettings.ini\r\n  echo -e \"${GREEN}..done..${NC}\"\r\nfi\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"",
            "container": "ghcr.io\/goover\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "STEAM_APPID",
            "description": "",
            "env_variable": "STEAM_APPID",
            "default_value": "1420710",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "WINDOWS_INSTALL",
            "description": "",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "QueryPort",
            "description": "",
            "env_variable": "QUERY_PORT",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:1024,65536",
            "field_type": "text"
        },
        {
            "name": "[WINE] WINETRICKS_RUN",
            "description": "",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "vcrun2022 dotnet7",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "WINEDEBUG",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "WINE_PATH",
            "description": "",
            "env_variable": "WINEPATH",
            "default_value": "\/home\/container",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "[SERVER] Server Name",
            "description": "",
            "env_variable": "SRV_NAME",
            "default_value": "goover.dev - Night of the Dragon Pterodactyl Egg",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:40",
            "field_type": "text"
        },
        {
            "name": "[SERVER] Server Password",
            "description": "",
            "env_variable": "SRV_PW",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "[SERVER] Max Players",
            "description": "",
            "env_variable": "MAX_PLAYERS",
            "default_value": "16",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "[SERVER] Admin Password",
            "description": "",
            "env_variable": "ADMIN_PW",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "[SERVER] MOTD",
            "description": "",
            "env_variable": "MOTD",
            "default_value": "https:\/\/dicord.goover.dev",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "[SERVER] Savename",
            "description": "",
            "env_variable": "SAVE_NAME",
            "default_value": "default",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "[GAME] Difficulty",
            "description": "",
            "env_variable": "DIFFICULTY",
            "default_value": "Normal",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:Peaceful,Easy,Normal,Hard,Survival,Challenge,Legend,Custom",
            "field_type": "text"
        }
    ]
}