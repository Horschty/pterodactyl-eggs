{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-10-01T10:22:20+02:00",
    "name": "Uptime Kuma",
    "author": "info@goover.de",
    "description": "Uptime Kuma is an easy-to-use self-hosted monitoring tool.",
    "features": null,
    "docker_images": {
        "ghcr.io\/goover\/apps:uptimekuma": "ghcr.io\/goover\/apps:uptimekuma"
    },
    "file_denylist": [],
    "startup": "node \/home\/container\/server\/server.js --port={{SERVER_PORT}}",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"[SERVER] INFO: Listening on \"\r\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Uptime Kuma Cloudflare Support Installscript${NC}\"\r\necho -e \"${RED}     Copyright 2023 by gOOvER${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}install needed packages...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\napk update\r\napk add --no-cache git curl jq file unzip make gcc g++ python3 python3-dev libtool\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}updating npm to latest...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\nif [ -d \"\/mnt\/server\/node_modules\" ]; then\r\n    rm -fR \/mnt\/server\/node_modules\r\n    npm cache verify\r\nfi\r\n\r\nnpm install -g npm@latest\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\n## add git ending if it's not on the address\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\n## pull git js repo\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"\/mnt\/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        echo -e \"${YELLOW}.git directory exists${NC}\"\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n            echo -e \"${YELLOW}loading info from git config${NC}\"\r\n            echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n            echo -e \"${YELLOW}files found with no git config${NC}\"\r\n            echo -e \"${YELLOW}closing out without touching things to not break anything${NC}\"\r\n            echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        echo -e \"${YELLOW}pulling latest from github...${NC}\"\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        git pull\r\n        echo -e \"${GREEN}..done..${NC}\"\r\n    fi\r\nelse\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}\/mnt\/server is empty.cloning files into repo...${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        echo -e \"${YELLOW}cloning default branch...${NC}\"\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        git clone ${GIT_ADDRESS} .\r\n        echo -e \"${GREEN}..done..${NC}\"\r\n    else\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        echo -e \"${YELLOW}cloning ${BRANCH}'...${NC}\"\r\n        echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\r\n        echo -e \"${GREEN}..done..${NC}\"\r\n    fi\r\n\r\nfi\r\n\r\n## add below your custom commands if needed\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}installing Uptime Kuma...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\ncd \/mnt\/server\r\nmkdir -p \/mnt\/server\/data\r\n\r\ngit config --global --add safe.directory \/mnt\/server\r\n\r\nnpm run setup\r\necho -e \"${GREEN}..done..${NC}\"\r\n\r\nif [ ! -f \"\/mnt\/server\/data\/kuma.db\" ]; then\r\n    cp \/mnt\/server\/db\/kuma.db \/mnt\/server\/data\/kuma.db\r\nfi\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}install completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\nexit 0",
            "container": "node:18-alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Git Repo Address",
            "description": "GitHub Repo to clone\r\n\r\nI.E. https:\/\/github.com\/parkervcp\/repo_name",
            "env_variable": "GIT_ADDRESS",
            "default_value": "https:\/\/github.com\/louislam\/uptime-kuma",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "JS file",
            "description": "The file that starts the app",
            "env_variable": "JS_FILE",
            "default_value": "server\/server.js",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}